<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->

<!-- Method Documentation URL:http://www.geonames.org/export/web-services.html#postalCodeSearch-->
<template name="postalCodeSearch" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="postalCode" description="The postal code to search."/>
    <parameter name="postalCodeStartsWith" description="The first characters or letters of a postal code."/>
    <parameter name="placeName" description="All fields : placename,postal code, country, admin name."/>
    <parameter name="placeNameStartsWith" description="The first characters of a place name."/>
    <parameter name="country"
               description="Default is all countries. The country parameter may occur more than once,country=FR,country=GP"/>
    <parameter name="countryBias" description="Records from the countryBias are listed first."/>
    <parameter name="maxRows"
               description="The maximal number of rows in the document returned by the service. Default is 10."/>
    <parameter name="style" description="The verbosity of returned xml document, default = MEDIUM."/>
    <parameter name="operator"
               description="The the operator 'AND' searches for all terms in the placename parameter, the operator 'OR' searches for any term, default = AND."/>
    <parameter name="charset"
               description="The default is 'UTF8', defines the encoding used for the document returned by the web service."/>
    <parameter name="isReduced"
               description="The default is 'false', when set to 'true' only the UK outer codes are returned. Attention: the default value on the commercial servers is currently set to 'true'. It will be changed later to 'false'."/>
    <parameter name="east" description="The bounding box, only features within the box are returned."/>
    <parameter name="west" description="The bounding box, only features within the box are returned."/>
    <parameter name="north" description="The bounding box, only features within the box are returned."/>
    <parameter name="south" description="The bounding box, only features within the box are returned."/>
    <parameter name="responseType" description="The responseType of the response of the postalCodeSearch method."/>
    <sequence>
        <property name="uri.var.postalCode" expression="$func:postalCode"/>
        <property name="uri.var.postalCodeStartsWith" expression="$func:postalCodeStartsWith"/>
        <property name="uri.var.placeName" expression="$func:placeName"/>
        <property name="uri.var.placeNameStartsWith" expression="$func:placeNameStartsWith"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.countryBias" expression="$func:countryBias"/>
        <property name="uri.var.maxRows" expression="$func:maxRows"/>
        <property name="uri.var.style" expression="$func:style"/>
        <property name="uri.var.operator" expression="$func:operator"/>
        <property name="uri.var.charset" expression="$func:charset"/>
        <property name="uri.var.isReduced" expression="$func:isReduced"/>
        <property name="uri.var.east" expression="$func:east"/>
        <property name="uri.var.west" expression="$func:west"/>
        <property name="uri.var.north" expression="$func:north"/>
        <property name="uri.var.south" expression="$func:south"/>
        <property name="uri.var.responseType" expression="$func:responseType"/>
        <script language="js">
            <![CDATA[
            var postalCode = mc.getProperty('uri.var.postalCode');
            var postalCodeStartsWith = mc.getProperty('uri.var.postalCodeStartsWith');
            var placeName = mc.getProperty('uri.var.placeName');
            var placeNameStartsWith = mc.getProperty('uri.var.placeNameStartsWith');
            var country = mc.getProperty('uri.var.country');
            var countryBias = mc.getProperty('uri.var.countryBias');
            var responseType = mc.getProperty('uri.var.responseType');
            var maxRows = mc.getProperty('uri.var.maxRows');
            var style = mc.getProperty('uri.var.style');
            var operator = mc.getProperty('uri.var.operator');
            var charset = mc.getProperty('uri.var.charset');
            var isReduced = mc.getProperty('uri.var.isReduced');
            var east = mc.getProperty('uri.var.east');
            var west = mc.getProperty('uri.var.west');
            var north = mc.getProperty('uri.var.north');
            var south = mc.getProperty('uri.var.south');
            var urlQuery = mc.getProperty('uri.var.urlQuery');
            if (postalCode != null && postalCode != "") {
               urlQuery += '&postalcode=' + postalCode;
            }
            if (postalCodeStartsWith != null && postalCodeStartsWith != "") {
               urlQuery += '&postalcode_startsWith=' + postalCodeStartsWith;
            }
            if (placeName != null && placeName != "") {
               urlQuery += '&placename=' + placeName;
            }
            if (placeNameStartsWith != null && placeNameStartsWith != "") {
               urlQuery += '&placename_startsWith=' + placeNameStartsWith;
            }
            if (country != null && country != "") {
               urlQuery += '&country=' + country;
            }
            if (countryBias != null && countryBias != "") {
               urlQuery += '&countryBias=' + countryBias;
            }
            if (maxRows != null && maxRows != "") {
               urlQuery += '&maxRows=' + maxRows;
            }
            if (style != null && style != "") {
               urlQuery += '&style=' + style;
            }
            if (operator != null && operator != "") {
               urlQuery += '&operator=' + operator;
            }
            if (charset != null && charset != "") {
               urlQuery += '&charset=' + charset;
            }
            if (isReduced != null && isReduced != "") {
               urlQuery += '&isReduced=' + isReduced;
            }
            if (east != null && east != "") {
               urlQuery += '&east=' + east;
            }
            if (west != null && west != "") {
               urlQuery += '&west=' + west;
            }
            if (north != null && north != "") {
               urlQuery += '&north=' + north;
            }
            if (south != null && south != "") {
               urlQuery += '&south=' + south;
            }
            if (responseType == null || responseType == ""){
               responseType='json'; 
            }
            mc.setProperty('uri.var.urlQuery',urlQuery); 
            if (responseType == 'json') {
               mc.setProperty('uri.var.endpoint', 'postalCodeSearchJSON');
            } else if (responseType == 'xml'){
               mc.setProperty('uri.var.endpoint', 'postalCodeSearch');
            } else {
               mc.setProperty('uri.var.endpoint', 'postalCodeSearch'+responseType);
            }
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{+uri.var.apiUrl}/{+uri.var.endpoint}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Origin" action="remove" scope="transport"/>
        <header name="Via" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Accept-Ranges" action="remove" scope="transport"/>
    </sequence>
</template>