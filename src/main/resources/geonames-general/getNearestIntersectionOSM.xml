<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->

<!-- API Doc: http://www.geonames.org/maps/osm-reverse-geocoder.html#findNearestIntersectionOSM -->
<template name="getNearestIntersectionOSM" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="longitude" description="The longitude value for the point."/>
    <parameter name="latitude" description="The latitude value for the point."/>
    <parameter name="responseType" description="The response type of the method."/>
    <parameter name="maxRows" description="Max rows returned."/>
    <parameter name="radius" description="The radius from the lat/lng point."/>
    <sequence>
        <property name="uri.var.longitude" expression="$func:longitude"/>
        <property name="uri.var.latitude" expression="$func:latitude"/>
        <property name="uri.var.responseType" expression="$func:responseType"/>
        <property name="uri.var.maxRows" expression="$func:maxRows"/>
        <property name="uri.var.radius" expression="$func:radius"/>
        <script language="js">
            <![CDATA[
	         var longitude = mc.getProperty('uri.var.longitude');
	         var latitude = mc.getProperty('uri.var.latitude');
	         var maxRows = mc.getProperty('uri.var.maxRows');
	         var radius = mc.getProperty('uri.var.radius');
	         var responseType = mc.getProperty('uri.var.responseType');
	         var urlQuery = mc.getProperty('uri.var.urlQuery');
	         urlQuery += '&lat=' + latitude + '&lng=' + longitude;
	         if (maxRows != null && maxRows != ""){
	            urlQuery += '&' + 'maxRows=' + maxRows;
	         }
	         if (radius != null && radius != ""){
	            urlQuery += '&' + 'radius=' + radius;
	         }
	         if (responseType == null || responseType == ""){
	            responseType='json'; 
	         }
	         mc.setProperty('uri.var.urlQuery',urlQuery); 
	         if (responseType == 'json') {
	            mc.setProperty('uri.var.endpoint', 'findNearestIntersectionOSMJSON');
	         } else if (responseType == 'xml'){
	            mc.setProperty('uri.var.endpoint', 'findNearestIntersectionOSM');
	         } else {
	            mc.setProperty('uri.var.endpoint', 'findNearestIntersectionOSM' + responseType);
	         }
	      ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{+uri.var.apiUrl}/{+uri.var.endpoint}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Origin" action="remove" scope="transport"/>
        <header name="Via" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Accept-Ranges" action="remove" scope="transport"/>
    </sequence>
</template>